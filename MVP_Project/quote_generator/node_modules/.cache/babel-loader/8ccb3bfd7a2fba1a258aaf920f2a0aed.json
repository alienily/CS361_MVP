{"ast":null,"code":"var _jsxFileName = \"/Users/lilyzhou/Desktop/CS361/MVP_Project/quote_generator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [quote, setQuote] = useState(\"\");\n\n  const getQuote = () => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(data => {\n      let randomNumb = Math.floor(Math.random() * data.length); //generates random number \n\n      setQuote(data[randomNumb]); //get the random quote   \n    });\n  };\n\n  useEffect(() => {\n    //when you refresh gets new quote\n    getQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", quote.text, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"author\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", quote.author, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: getQuote,\n            className: \"button\",\n            children: \"Get Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://twitter.com/intent/tweet?text=${quote.text}`,\n            target: \"_blank\",\n            className: \"button\",\n            children: \"Tweet \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5dMXsGVSJyMiqBXtvqhGbwvmLe8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lilyzhou/Desktop/CS361/MVP_Project/quote_generator/src/App.js"],"names":["React","useState","useEffect","App","quote","setQuote","getQuote","fetch","then","res","json","data","randomNumb","Math","floor","random","length","text","author"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAjC;;AACA,QAAMK,QAAQ,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAjB,CADc,CAC4C;;AAC1DX,MAAAA,QAAQ,CAACM,IAAI,CAACC,UAAD,CAAL,CAAR,CAFc,CAEc;AAC7B,KALH;AAMD,GAPD;;AASAV,EAAAA,SAAS,CAAC,MAAM;AAAG;AACjBI,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADV,eAEE;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA,8BAEE;AAAA,yBAAKF,KAAK,CAACa,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIA;AAAK,QAAA,SAAS,EAAG,QAAjB;AAAA,gCACE;AAAA,iCAAYb,KAAK,CAACc,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEA;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEI;AAAQ,YAAA,OAAO,EAAIZ,QAAnB;AAA6B,YAAA,SAAS,EAAG,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,IAAI,EAAK,yCAAwCF,KAAK,CAACa,IAAK,EAA/D;AACA,YAAA,MAAM,EAAC,QADP;AAEA,YAAA,SAAS,EAAG,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApCD;;GAAMd,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nconst App = () => {\n  const[quote, setQuote] = useState(\"\");  \n  const getQuote = () => {\n    fetch(\"https://type.fit/api/quotes\")\n      .then((res) => res.json())\n      .then((data) => {\n        let randomNumb = Math.floor(Math.random() * data.length); //generates random number \n        setQuote(data[randomNumb]); //get the random quote   \n      });\n  }\n\n  useEffect(() => {  //when you refresh gets new quote\n    getQuote();\n  }, []);\n\n  return (\n    <div className=\"App\">\n              <h1>Random Quote Generator</h1>\n      <div className = \"quote\">\n\n        <p>\"{quote.text}\"</p>  \n        <br></br>\n      <div className = \"author\">\n        <p>Author: {quote.author} </p>\n      <div className = \"buttons\">\n        <br></br>\n          <button onClick = {getQuote} className = \"button\">Get Quote</button>\n          <a href = {`https://twitter.com/intent/tweet?text=${quote.text}`} \n          target=\"_blank\"\n          className = \"button\"> \n          Tweet </a>  \n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}